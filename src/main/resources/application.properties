#db
spring.datasource.driverClassName = ${DB_DRIVER:org.h2.Driver}
spring.datasource.url=${DATASOURCE_URL:jdbc:h2:mem:proposta_teste}
spring.datasource.username=${DB_USER:sa}
spring.datasource.password=${DB_PWD:}

#jpa
spring.jpa.hibernate-plataform=${DB_DIALECT:org.hibernate.dialect.H2Dialect}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.javax.persistence.query.timeout = 100
#REALIZAR AÇÕES NO BANCO EM LOTES
#spring.jpa.properties.hibernate.jdbc.batch-size=3

# actuator
#management.endpoint.health.show-details=when-authorized
management.endpoints.web.exposure.include=prometheus
#info.app.name=@project.name@
#info.app.description=@project.description@
#info.app.version=@project.version@
#info.app.encoding=@project.build.sourceEncoding@
#info.app.java.version=@java.version@


#FEIGN
service.analiseSolicitacao.url=${SERVICE_ANALISE_SOLICITACAO:http://localhost:9999}
service.cartao.url=${SERVICE_CARTAO:http://localhost:8888}
#feign.client.config.AnaliseClient.read-timeout=100
#feign.client.config.CartaoClient.read-timeout=100

## spring security resource server configuration
#spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/proposta/protocol/openid-connect/certs}

#URL OPENAPI = http://localhost:8080/swagger-ui/index.html
#springdoc.swagger-ui.path=/url-custom.html

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${spring.application.name:apiSpring}

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# OpenTracing JDBC
#opentracing.spring.cloud.jdbc.enabled=false

# JAEGER - TIPOS DE AMOSTRAGEM
# CONSTANTE (ENVIA 100% DAS OPERAÇÕES PROCESSADAS PARA O JAEGER)
#opentracing.jaeger.const-sampler.decision=${JAEGER_SAMPLER:true} /FALSE

# PROBABILISTICO (VAI ENVIANDO PORCENTAGENS. EX. 0.5 = 50%: 50% -> 100%)
#opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:0.5}

# RATE LIMIT (ENVIA UMA CERTA QUANTIDADE POR SEGUNDO)
#opentracing.jaeger.rate-limiting-sampler.max-traces-per-second=${JAEGER_SAMPLER:10}